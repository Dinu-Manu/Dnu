const { cmd, commands } = require('../command');
const { getBuffer, getGroupAdmins, getRandom, h2k, isUrl, Json, runtime, sleep, fetchJson } = require('../lib/functions');
const { ytmp3 } = require('ruhend-scraper');
const yts = require('yt-search');

cmd({
    pattern: "ruhu",
    desc: 'Download Song as MP3',
    use: '.song [song name]',
    react: "üì•",
    category: 'download',
    filename: __filename
},
async (conn, mek, m, {
  q,
  reply
}) => {
    try {
        if (!q) return reply('‡∂á‡∂∫‡∑í ‡∂¥‡∂ö‡∂∫‡∑è, ‡∂ú‡∑ì‡∂≠‡∑ö ‡∂±‡∂∏‡∂ö‡∑ä‡∑Ä‡∂≠‡∑ä ‡∂Ø‡∑è‡∂±‡∑ä‡∂±‡∂ö‡∑ù!');

        reply('‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑É‡∑ô‡∑Ä‡∑ì‡∂∏‡∑ô‡∂∫‡∑í...');

        const search = await yts(q);
        const video = search.videos[0];

        if (!video) return reply('‡∂ú‡∑ì‡∂≠‡∂∫‡∂ö‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑î‡∂´‡∑è.');

        const data = await ytmp3(video.url);

        await conn.sendMessage(m.chat, {
            image: { url: data.thumbnail },
            caption: `*Title:* ${data.title}\n*Author:* ${data.author}\n*Duration:* ${data.duration}\n\n_‡∂î‡∂∂‡∂ú‡∑ö MP3 ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∏‡∑ô‡∂±‡∑ä‡∂±!_`,
        }, { quoted: mek });

        await conn.sendMessage(m.chat, {
            audio: { url: data.audio },
            mimetype: 'audio/mpeg',
            fileName: `${data.title}.mp3`
        }, { quoted: mek });

    } catch (err) {
        console.error(err);
        reply('‡∂ã‡∂∂‡∂ß‡∂∏ ‡∑Ä‡∑ê‡∂ß‡∑ô‡∂∫‡∑í ‡∂¥‡∂ö‡∂∫‡∑è, error ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ü‡∑Ä! ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.');
    }
});
